{"ast":null,"code":"function isWaapiSupportedEasing(easing) {\n  return !easing || // Default easing\n  Array.isArray(easing) || // Bezier curve\n  typeof easing === \"string\" && supportedWaapiEasing[easing];\n}\n\nconst cubicBezierAsString = _ref => {\n  let [a, b, c, d] = _ref;\n  return `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n};\n\nconst supportedWaapiEasing = {\n  linear: \"linear\",\n  ease: \"ease\",\n  easeIn: \"ease-in\",\n  easeOut: \"ease-out\",\n  easeInOut: \"ease-in-out\",\n  circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n  circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n  backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n  backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99])\n};\n\nfunction mapEasingToNativeEasing(easing) {\n  if (!easing) return undefined;\n  return Array.isArray(easing) ? cubicBezierAsString(easing) : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };","map":{"version":3,"sources":["D:/Documents/GI4/s7/React/portfolio-ghiz/node_modules/framer-motion/dist/es/animation/waapi/easing.mjs"],"names":["isWaapiSupportedEasing","easing","Array","isArray","supportedWaapiEasing","cubicBezierAsString","a","b","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","undefined"],"mappings":"AAAA,SAASA,sBAAT,CAAgCC,MAAhC,EAAwC;AACpC,SAAQ,CAACA,MAAD,IAAW;AACfC,EAAAA,KAAK,CAACC,OAAN,CAAcF,MAAd,CADI,IACqB;AACxB,SAAOA,MAAP,KAAkB,QAAlB,IAA8BG,oBAAoB,CAACH,MAAD,CAFvD;AAGH;;AACD,MAAMI,mBAAmB,GAAG;AAAA,MAAC,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,CAAD;AAAA,SAAmB,gBAAeH,CAAE,KAAIC,CAAE,KAAIC,CAAE,KAAIC,CAAE,GAAtD;AAAA,CAA5B;;AACA,MAAML,oBAAoB,GAAG;AACzBM,EAAAA,MAAM,EAAE,QADiB;AAEzBC,EAAAA,IAAI,EAAE,MAFmB;AAGzBC,EAAAA,MAAM,EAAE,SAHiB;AAIzBC,EAAAA,OAAO,EAAE,UAJgB;AAKzBC,EAAAA,SAAS,EAAE,aALc;AAMzBC,EAAAA,MAAM,EAAEV,mBAAmB,CAAC,CAAC,CAAD,EAAI,IAAJ,EAAU,IAAV,EAAgB,CAAhB,CAAD,CANF;AAOzBW,EAAAA,OAAO,EAAEX,mBAAmB,CAAC,CAAC,IAAD,EAAO,CAAP,EAAU,CAAV,EAAa,IAAb,CAAD,CAPH;AAQzBY,EAAAA,MAAM,EAAEZ,mBAAmB,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,CAAC,IAApB,CAAD,CARF;AASzBa,EAAAA,OAAO,EAAEb,mBAAmB,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAD;AATH,CAA7B;;AAWA,SAASc,uBAAT,CAAiClB,MAAjC,EAAyC;AACrC,MAAI,CAACA,MAAL,EACI,OAAOmB,SAAP;AACJ,SAAOlB,KAAK,CAACC,OAAN,CAAcF,MAAd,IACDI,mBAAmB,CAACJ,MAAD,CADlB,GAEDG,oBAAoB,CAACH,MAAD,CAF1B;AAGH;;AAED,SAASI,mBAAT,EAA8BL,sBAA9B,EAAsDmB,uBAAtD,EAA+Ef,oBAA/E","sourcesContent":["function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n"]},"metadata":{},"sourceType":"module"}